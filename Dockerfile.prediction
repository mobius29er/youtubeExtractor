# Dockerfile for ML Prediction Service
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies for OpenCV and image processing
RUN apt-get update && apt-get install -y \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libglib2.0-0 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements-prediction.txt .
RUN pip install --no-cache-dir -r requirements-prediction.txt

# Copy backend source
COPY src/ ./src/

# Copy ML models and data
COPY models/ ./models/
COPY extracted_data/ ./extracted_data/
RUN echo "Copied models directory and extracted_data for predictions"
RUN ls -la models/ 2>/dev/null || echo "Models directory not found, will use fallback predictions"

# Test critical imports before starting server
RUN echo "Testing critical imports..."
RUN python -c "import fastapi; print('‚úÖ FastAPI OK')" || echo "‚ùå FastAPI failed"
RUN python -c "import uvicorn; print('‚úÖ Uvicorn OK')" || echo "‚ùå Uvicorn failed" 
RUN python -c "import pandas; print('‚úÖ Pandas OK')" || echo "‚ùå Pandas failed"
RUN python -c "import numpy; print('‚úÖ Numpy OK')" || echo "‚ùå Numpy failed"
RUN python -c "import sklearn; print('‚úÖ Sklearn OK')" || echo "‚ùå Sklearn failed"
RUN python -c "import cv2; print('‚úÖ OpenCV OK')" || echo "‚ùå OpenCV failed"
RUN python -c "import PIL; print('‚úÖ PIL OK')" || echo "‚ùå PIL failed"
RUN python -c "import joblib; print('‚úÖ Joblib OK')" || echo "‚ùå Joblib failed"

# Test if prediction_api can be imported
RUN echo "Testing prediction_api import..."
RUN python -c "import sys; sys.path.append('src'); import prediction_api; print('‚úÖ prediction_api import OK')" || echo "‚ùå prediction_api import failed"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl --fail http://localhost:8002/api/health || exit 1

# Expose port
EXPOSE 8002

# Run prediction API server with debugging
CMD echo "üöÄ Starting prediction API server..." && \
    echo "Current directory: $(pwd)" && \
    echo "Python path: $PYTHONPATH" && \
    ls -la src/ && \
    echo "Starting server..." && \
    exec python src/prediction_api.py || (echo "‚ùå Server failed to start" && sleep infinity)